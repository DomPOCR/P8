buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
       classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

plugins {

   id "com.github.spotbugs" version "1.6.2"

}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.javamoney', name: 'moneta', version: '1.3'
	compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'


    // Libraries move to java code

    //compile(name:'gpsUtil', ext:'jar')
    //compile(name:'RewardCentral', ext:'jar')
    //compile(name:'TripPricer', ext:'jar')


    //testCompile("junit:junit")

    // Junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.1.RELEASE'
    testCompile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.6'
    testCompile group: 'org.jacoco', name: 'org.jacoco.ant', version: '0.8.6'

    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'




}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    /* jvmArgs "--enable-preview" */
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
